<?xml version="1.0"?>
<launch>

  <!-- Launch Gazebo -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <arg name="first_tb3" default="robot1"/>
  <arg name="first_x_pos" default="-1.0"/>
  <arg name="first_y_pos" default="-0.5"/>
  <arg name="first_z_pos" default="0.0"/>

  <arg name="second_tb3" default="robot2"/>
  <arg name="second_x_pos" default="-1.0"/>
  <arg name="second_y_pos" default="-0."/>
  <arg name="second_z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_stage_1.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  
<!-- turtlebot3_$(arg model)-->

  <!-- Arguments -->
  <arg name="robot_namelist" default="($(arg first_tb3))"/>
  <arg name="open_rviz" default="true"/>
  <arg name="rtabmap_viz" default="false"/>
  <arg name="move_forward_only" default="false"/>

  <arg name="with_camera" default="true"/>
  <arg name="localization" default="false"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>

  <!-- Turtlebot3 -->
  <!--<group ns = "$(arg first_tb3)">-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find read_msgs)/urdf/turtlebot3_$(arg model).urdf.xacro' botname:=$(arg first_tb3)" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf1"  args="-urdf -model $(arg first_tb3)  -x $(arg first_x_pos) -y $(arg first_y_pos) -z $(arg first_z_pos) -param robot_description" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value="$(arg first_tb3)"/>
  </node>

  <group ns="rtabmap">
    <node if="$(eval model=='waffle')" pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="screen">
      <remap from="rgb/image"         to="/camera/$(arg first_tb3)/rgb/image_raw"/>
      <remap from="depth/image"       to="/camera/$(arg first_tb3)/depth/image_raw"/>
      <remap from="rgb/camera_info"   to="/camera/$(arg first_tb3)/rgb/camera_info"/>
    </node>

    <node name="rtabmap1" pkg="rtabmap_slam" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="$(arg first_tb3)/base_footprint"/>
      <param name="subscribe_rgb"   type="bool" value="true"/>
      <param name="subscribe_depth" type="bool" value="true"/>
      <param     if="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="true"/>
      <param unless="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="false"/>
      <param name="subscribe_scan"      type="bool"   value="false"/>
      <param name="approx_sync"         type="bool"   value="true"/>

      <!-- inputs -->
      <remap from="odom"            to="$(arg first_tb3)/odom"/>
      <remap from="rgbd_image"       to="$(arg first_tb3)/rgbd_image"/>
      <remap from="rgbd_image"       to="$(arg first_tb3)/rgbd_image"/>

      <!-- output -->
      <remap from="grid_map" to="/$(arg first_tb3)/map"/>

      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"                 type="string" value="1"/>
      <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="GridGlobal/MinSize"           type="string" value="20"/>
      <param name="Rtabmap/DetectionRate"        type="string" value="1"/>
      <param name="Grid/RayTracing"              type="string" value="true"/>
      <param name="Grid/CellSize"                type="string" value="0.04"/>
      <param name="Grid/3D"                      type="string" value="false"/>

    </node>
    <!-- visualization with rtabmap_viz -->
    <node if="$(arg rtabmap_viz)" pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_scan"   type="bool"   value="false"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="$(arg first_tb3)/base_footprint"/>
      <param name="approx_sync"      type="bool"   value="true"/>
      <remap from="odom"            to="/odom"/>

    </node>
  </group>

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find read_msgs)/rviz/rviz_explore.rviz"/>
  </group>

  <node pkg="read_msgs" type="assigner.py" name="assigner" output="screen">
    <param name="x_pos" value="$(arg first_x_pos)"/>
    <param name="y_pos" value="$(arg first_y_pos)"/>
  </node>


  <node pkg="read_msgs" type="robot_control.py" name="$(arg first_tb3)_controller" output="screen">
    <param name="robot_name" value="$(arg first_tb3)"/>
  </node>

  <!--<node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg first_tb3)/base_footprint 20"/>-->

</launch>
